/* Modal Backdrop com efeito glassmorphism */
.modalBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(135deg, 
      rgba(15, 23, 42, 0.8) 0%, 
      rgba(30, 41, 59, 0.9) 50%, 
      rgba(15, 23, 42, 0.8) 100%
    );
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1100;
  opacity: 0;
  visibility: hidden;
  transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
}

.visible {
  opacity: 1;
  visibility: visible;
}

/* Container principal com design futur√≠stico */
.modalContainer {
  background: 
    linear-gradient(145deg, 
      rgba(15, 23, 42, 0.95) 0%, 
      rgba(30, 41, 59, 0.98) 50%, 
      rgba(15, 23, 42, 0.95) 100%
    );
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);
  border: 1px solid rgba(59, 130, 246, 0.3);
  border-radius: 24px;
  box-shadow: 
    0 25px 50px rgba(0, 0, 0, 0.7),
    0 0 0 1px rgba(59, 130, 246, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  width: 92%;
  max-width: 900px;
  max-height: 92vh;
  display: flex;
  flex-direction: column;
  animation: modalEnter 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  overflow: hidden;
  color: #e2e8f0;
  position: relative;
}

/* Anima√ß√£o de entrada */
@keyframes modalEnter {
  from {
    transform: translateY(50px) scale(0.9);
    opacity: 0;
  }
  to {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

/* Header futur√≠stico */
.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 24px 32px;
  background: 
    linear-gradient(135deg, 
      rgba(30, 41, 59, 0.8) 0%, 
      rgba(51, 65, 85, 0.6) 100%
    );
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
  position: relative;
  overflow: hidden;
}

.modalHeader::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 1px;
  background: linear-gradient(90deg, transparent, #3b82f6, transparent);
  animation: shimmer 3s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

.modalHeader h2 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 700;
  background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: flex;
  align-items: center;
  gap: 12px;
}

.modalHeader h2::before {
  content: 'ü§ñ';
  font-size: 1.2rem;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

/* Actions do header */
.headerActions {
  display: flex;
  align-items: center;
  gap: 16px;
}

.addButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
  color: white;
  border: none;
  border-radius: 12px;
  padding: 12px 20px;
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  position: relative;
  overflow: hidden;
  box-shadow: 
    0 4px 15px rgba(59, 130, 246, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.addButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.addButton:hover::before {
  left: 100%;
}

.addButton:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 8px 25px rgba(59, 130, 246, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.addButton:active {
  transform: translateY(0);
}

.closeButton {
  background: none;
  border: none;
  color: #94a3b8;
  cursor: pointer;
  padding: 12px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  position: relative;
}

.closeButton::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1));
  border-radius: 12px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.closeButton:hover::before {
  opacity: 1;
}

.closeButton:hover {
  color: #ef4444;
  transform: rotate(90deg);
}

/* Body do modal */
.modalBody {
  padding: 32px;
  overflow-y: auto;
  max-height: calc(92vh - 100px);
  position: relative;
}

.modalBody::-webkit-scrollbar {
  width: 8px;
}

.modalBody::-webkit-scrollbar-track {
  background: rgba(30, 41, 59, 0.3);
  border-radius: 4px;
}

.modalBody::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  border-radius: 4px;
}

/* Search futur√≠stico */
.searchContainer {
  margin-bottom: 24px;
}

.searchInputContainer {
  position: relative;
  display: flex;
  align-items: center;
  max-width: 600px;
}

.searchIcon {
  position: absolute;
  left: 16px;
  color: #64748b;
  z-index: 1;
  transition: color 0.3s ease;
}

.searchInput {
  width: 100%;
  padding: 16px 20px 16px 48px;
  border: 1px solid rgba(59, 130, 246, 0.2);
  border-radius: 16px;
  font-size: 1rem;
  background: 
    linear-gradient(135deg, 
      rgba(30, 41, 59, 0.8) 0%, 
      rgba(51, 65, 85, 0.6) 100%
    );
  backdrop-filter: blur(10px);
  color: #e2e8f0;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.searchInput:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 
    0 0 0 3px rgba(59, 130, 246, 0.1),
    inset 0 2px 4px rgba(0, 0, 0, 0.1);
  transform: translateY(-1px);
}

.searchInput:focus + .searchIcon {
  color: #3b82f6;
}

.clearSearchButton {
  position: absolute;
  right: 12px;
  background: none;
  border: none;
  color: #64748b;
  cursor: pointer;
  padding: 8px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.clearSearchButton:hover {
  background-color: rgba(239, 68, 68, 0.1);
  color: #ef4444;
  transform: scale(1.1);
}

/* Estado vazio */
.emptyQuestions {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 20px;
  text-align: center;
  color: #64748b;
  background: 
    linear-gradient(135deg, 
      rgba(30, 41, 59, 0.3) 0%, 
      rgba(51, 65, 85, 0.2) 100%
    );
  border-radius: 20px;
  border: 2px dashed rgba(59, 130, 246, 0.3);
  position: relative;
  overflow: hidden;
}

.emptyQuestions::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(circle at 50% 50%, 
      rgba(59, 130, 246, 0.05) 0%, 
      transparent 70%
    );
  animation: breathe 4s ease-in-out infinite;
}

@keyframes breathe {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

.emptyQuestions p {
  margin: 20px 0;
  font-size: 1.1rem;
  position: relative;
  z-index: 1;
}

.addFirstButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
  color: white;
  border: none;
  border-radius: 16px;
  padding: 16px 32px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  box-shadow: 
    0 8px 25px rgba(59, 130, 246, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  z-index: 1;
  overflow: hidden;
}

.addFirstButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.addFirstButton:hover::before {
  left: 100%;
}

.addFirstButton:hover {
  transform: translateY(-4px) scale(1.05);
  box-shadow: 
    0 12px 40px rgba(59, 130, 246, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

/* Loading futur√≠stico */
.loadingQuestions {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 80px 20px;
  text-align: center;
  color: #64748b;
}

.spinner {
  width: 48px;
  height: 48px;
  border: 3px solid rgba(59, 130, 246, 0.1);
  border-radius: 50%;
  border-top-color: #3b82f6;
  border-right-color: #1d4ed8;
  animation: spin 1s linear infinite;
  margin-bottom: 20px;
  position: relative;
}

.spinner::after {
  content: '';
  position: absolute;
  inset: 6px;
  border: 2px solid transparent;
  border-top-color: rgba(59, 130, 246, 0.3);
  border-radius: 50%;
  animation: spin 2s linear infinite reverse;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Grid de perguntas */
.questionsGrid {
  display: grid;
  gap: 20px;
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
}

.questionCard {
  position: relative;
  background: 
    linear-gradient(135deg, 
      rgba(30, 41, 59, 0.8) 0%, 
      rgba(51, 65, 85, 0.6) 100%
    );
  backdrop-filter: blur(20px);
  border: 1px solid rgba(59, 130, 246, 0.2);
  border-radius: 20px;
  padding: 24px;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  overflow: hidden;
  min-height: 160px;
}

.questionCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, #3b82f6, #8b5cf6, #3b82f6);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.questionCard:hover::before {
  opacity: 1;
}

.questionCard:hover {
  transform: translateY(-8px);
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.2),
    0 0 0 1px rgba(59, 130, 246, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  border-color: rgba(59, 130, 246, 0.4);
}

/* A√ß√µes das perguntas */
.questionActions {
  position: absolute;
  top: 16px;
  right: 16px;
  display: flex;
  gap: 8px;
  z-index: 10;
}

.editQuestionButton,
.deleteQuestionButton {
  width: 40px;
  height: 40px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.editQuestionButton {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(147, 197, 253, 0.1));
  color: #3b82f6;
  border: 1px solid rgba(59, 130, 246, 0.3);
}

.editQuestionButton:hover {
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  color: white;
  transform: scale(1.1) rotate(5deg);
  box-shadow: 0 8px 20px rgba(59, 130, 246, 0.3);
}

.deleteQuestionButton {
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.2), rgba(252, 165, 165, 0.1));
  color: #ef4444;
  border: 1px solid rgba(239, 68, 68, 0.3);
}

.deleteQuestionButton:hover {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  color: white;
  transform: scale(1.1) rotate(-5deg);
  box-shadow: 0 8px 20px rgba(239, 68, 68, 0.3);
}

/* Informa√ß√µes da pergunta */
.questionInfo {
  padding-right: 80px;
  position: relative;
  z-index: 5;
}

.questionText {
  margin: 0 0 16px 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: #e2e8f0;
  line-height: 1.6;
  position: relative;
}

.questionLabel {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  font-weight: 700;
  color: #3b82f6;
  margin-right: 8px;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.questionLabel::before {
  content: '‚ùì';
  font-size: 0.8rem;
}

.answerText {
  margin: 0;
  font-size: 1rem;
  color: #cbd5e1;
  line-height: 1.6;
  white-space: pre-line;
  position: relative;
}

.answerLabel {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  font-weight: 700;
  color: #10b981;
  margin-right: 8px;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.answerLabel::before {
  content: 'üí°';
  font-size: 0.8rem;
}

/* Modal de confirma√ß√£o de exclus√£o - CORRIGIDO */
.confirmDelete {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(135deg, 
      rgba(15, 23, 42, 0.98) 0%, 
      rgba(30, 41, 59, 0.95) 100%
    );
  backdrop-filter: blur(20px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 24px;
  text-align: center;
  z-index: 20;
  border-radius: 20px;
  border: 1px solid rgba(239, 68, 68, 0.3);
  animation: confirmDeleteEnter 0.3s ease-out;
  min-height: 160px; /* Garante altura m√≠nima */
  box-sizing: border-box;
}

@keyframes confirmDeleteEnter {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.confirmDelete::before {
  content: '‚ö†Ô∏è';
  font-size: 2rem;
  margin-bottom: 8px;
  animation: bounce 1s ease-in-out infinite;
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-4px); }
}

.confirmDelete p {
  margin: 8px 0 20px;
  font-size: 1.1rem;
  font-weight: 600;
  color: #e2e8f0;
}

.confirmButtons {
  display: flex;
  gap: 12px;
  width: 100%;
  max-width: 240px;
}

.cancelDeleteButton,
.confirmDeleteButton {
  flex: 1;
  padding: 12px 16px;
  border-radius: 12px;
  border: none;
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
}

.cancelDeleteButton {
  background: linear-gradient(135deg, rgba(71, 85, 105, 0.8), rgba(51, 65, 85, 0.9));
  color: #e2e8f0;
  border: 1px solid rgba(71, 85, 105, 0.5);
}

.cancelDeleteButton:hover {
  background: linear-gradient(135deg, #475569, #334155);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(71, 85, 105, 0.3);
}

.confirmDeleteButton {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  color: white;
  border: 1px solid rgba(239, 68, 68, 0.5);
  box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
}

.confirmDeleteButton:hover {
  background: linear-gradient(135deg, #dc2626, #b91c1c);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(239, 68, 68, 0.4);
}

.confirmDeleteButton:disabled {
  background: linear-gradient(135deg, rgba(239, 68, 68, 0.5), rgba(220, 38, 38, 0.5));
  cursor: not-allowed;
  transform: none;
}

/* Formul√°rio de pergunta */
.questionForm {
  display: flex;
  flex-direction: column;
  gap: 24px;
  max-width: 800px;
  margin: 0 auto;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.formGroup label {
  font-size: 1rem;
  font-weight: 600;
  color: #cbd5e1;
  display: flex;
  align-items: center;
  gap: 8px;
}

.formGroup label::before {
  content: '‚ú®';
  font-size: 0.9rem;
}

.textarea {
  padding: 16px 20px;
  border: 1px solid rgba(59, 130, 246, 0.2);
  border-radius: 16px;
  font-size: 1rem;
  background: 
    linear-gradient(135deg, 
      rgba(30, 41, 59, 0.8) 0%, 
      rgba(51, 65, 85, 0.6) 100%
    );
  backdrop-filter: blur(10px);
  color: #e2e8f0;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  resize: vertical;
  min-height: 100px;
  font-family: inherit;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.textarea:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 
    0 0 0 3px rgba(59, 130, 246, 0.1),
    inset 0 2px 4px rgba(0, 0, 0, 0.1);
  transform: translateY(-2px);
}

.textarea::placeholder {
  color: #64748b;
}

/* A√ß√µes do formul√°rio */
.formActions {
  display: flex;
  justify-content: flex-end;
  gap: 16px;
  margin-top: 24px;
}

.cancelFormButton,
.saveFormButton {
  padding: 14px 24px;
  border-radius: 12px;
  border: none;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  display: flex;
  align-items: center;
  gap: 8px;
  min-width: 120px;
  justify-content: center;
}

.cancelFormButton {
  background: linear-gradient(135deg, rgba(71, 85, 105, 0.8), rgba(51, 65, 85, 0.9));
  color: #e2e8f0;
  border: 1px solid rgba(71, 85, 105, 0.5);
}

.cancelFormButton:hover {
  background: linear-gradient(135deg, #475569, #334155);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(71, 85, 105, 0.3);
}

.saveFormButton {
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  color: white;
  border: 1px solid rgba(59, 130, 246, 0.5);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
  position: relative;
  overflow: hidden;
}

.saveFormButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.saveFormButton:hover::before {
  left: 100%;
}

.saveFormButton:hover {
  background: linear-gradient(135deg, #1d4ed8, #1e40af);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);
}

.saveFormButton:disabled {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.5), rgba(29, 78, 216, 0.5));
  cursor: not-allowed;
  transform: none;
}

.buttonSpinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: #fff;
  animation: spin 1s linear infinite;
}

/* Responsividade melhorada */
@media (max-width: 1024px) {
  .questionsGrid {
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }
}

@media (max-width: 768px) {
  .modalContainer {
    width: 96%;
    max-height: 95vh;
    margin: 2vh auto;
  }
  
  .modalBody {
    padding: 20px;
  }
  
  .questionsGrid {
    grid-template-columns: 1fr;
    gap: 16px;
  }
  
  .questionInfo {
    padding-right: 60px;
  }
  
  .questionActions {
    top: 12px;
    right: 12px;
    gap: 6px;
  }
  
  .editQuestionButton,
  .deleteQuestionButton {
    width: 36px;
    height: 36px;
  }
  
  .formActions {
    flex-direction: column;
    gap: 12px;
  }
  
  .cancelFormButton, 
  .saveFormButton {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .modalContainer {
    width: 100%;
    height: 100%;
    max-height: 100%;
    border-radius: 0;
    margin: 0;
  }
  
  .modalHeader {
    padding: 16px 20px;
  }
  
  .modalBody {
    padding: 16px;
  }
  
  .modalHeader h2 {
    font-size: 1.3rem;
  }
  
  .headerActions {
    gap: 12px;
  }
  
  .addButton {
    padding: 10px 16px;
    font-size: 0.9rem;
  }
  
  .questionCard {
    padding: 20px;
    min-height: 140px;
  }
  
  .confirmDelete {
    padding: 20px;
    min-height: 140px;
  }
}